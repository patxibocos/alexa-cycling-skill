name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    # Install Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'

    - name: Test alexa-skill-lambda
      run: go test ./...
      working-directory: ./alexa-skill-lambda

    - name: Build alexa-skill-lambda
      run: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-s -w" -o ../terraform/alexa-skill-lambda main.go
      working-directory: ./alexa-skill-lambda

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Setup Terraform variables
      working-directory: ./terraform
      run: |-
        cat > pipeline.auto.tfvars <<EOF
        AWS_S3_BUCKET     = "${{ secrets.AWS_S3_BUCKET }}"
        AWS_S3_OBJECT_KEY = "${{ secrets.AWS_S3_OBJECT_KEY }}"
        ALEXA_SKILL_ID    = "${{ secrets.ALEXA_SKILL_ID }}"
        EOF

    - name: Update dev function
      run: ./upload_to_s3.sh
      working-directory: ./terraform
      env:
        FUNCTION_NAME: alexa-skill-lambda_dev.zip
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    - name: Update prod function
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: ./upload_to_s3.sh
      working-directory: ./terraform
      env:
        FUNCTION_NAME: alexa-skill-lambda_prod.zip
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform

    - name: Update lambda aliases
      run: ./create_update_alias.sh
      working-directory: ./terraform
